<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0"><dict><key>scopeName</key><string>source.nlogo</string><key>name</key><string>Netlogo</string><key>fileTypes</key><array><string>nlogo</string><string>nls</string></array><key>firstLineMatch</key><string></string><key>foldingStartMarker</key><string>[s*$</string><key>foldingStopMarker</key><string>^s*}</string><key>patterns</key><array><dict><key>include</key><string>#comment</string></dict><dict><key>include</key><string>#keyword</string></dict><dict><key>include</key><string>#function</string></dict><dict><key>include</key><string>#constant</string></dict><dict><key>include</key><string>#strings</string></dict><dict><key>include</key><string>#brackets</string></dict><dict><key>include</key><string>#operators</string></dict><dict><key>include</key><string>#parens</string></dict><dict><key>include</key><string>#builtin_functions</string></dict></array><key>repository</key><dict><key>comment</key><dict><key>patterns</key><array><dict><key>begin</key><string>;</string><key>beginCaptures</key><string>punctuation.definition.comment.netlogo</string><key>end</key><string>$\n?</string><key>name</key><string>comment.line.semicolon.netlogo</string></dict></array></dict><key>keyword</key><dict><key>patterns</key><array><dict><key>match</key><string>^\s*(__includes)</string><key>name</key><string>keyword.control.import.netlogo</string></dict><dict><key>match</key><string>^\s*(globals|breed)\s</string><key>name</key><string>storage.modifier.global.netlogo</string></dict><dict><key>match</key><string>^\s*(if|ifelse|ifelse-value)\s</string><key>name</key><string>keyword.control.conditional.netlogo</string></dict><dict><key>match</key><string>^\s*(ask|ask-concurrent|foreach|loop|repeat|while|every| with-local-randomness|without-interruption)\s</string><key>name</key><string>keyword.control.repeat.netlogo</string></dict><dict><key>match</key><string>^\s*(end|report|stop|wait)\s</string><key>name</key><string>keyword.control.statement.netlogo</string></dict><dict><key>match</key><string>^\s*(and|not|or|xor)\s</string><key>name</key><string>keyword.operator.logical.netlogo</string></dict><dict><key>match</key><string>^\s*(error|error-message)\s</string><key>name</key><string>keyword.control.exception.netlogo</string></dict><dict><key>match</key><string>^\s*(error|error-message)\s</string><key>name</key><string>keyword.other.netlogo</string></dict></array></dict><key>function</key><dict><key>patterns</key><array><dict><key>match</key><string>^\s*(to|to-report)\s+(\w+[-\w]*)</string><key>captures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.netlogo</string></dict><key>2</key><dict><key>name</key><string>entity.name.type.class.netlogo</string></dict></dict><key>name</key><string>meta.class.netlogo</string></dict></array></dict><key>constant</key><dict><key>patterns</key><array><dict><key>match</key><string>(?&lt;=[\s\-\+\*\/\\=:\[\(\{,]|^)\d*\.?\d+([eE][+-]?\d)?([0-9&amp;&amp;[^\.]])*(i|j)?\b</string><key>name</key><string>constant.numeric.integer.netlogo</string></dict><dict><key>match</key><string>(^|\s)(true|false)(\s|$)</string><key>name</key><string>constant.language.netlogo</string></dict></array></dict><key>strings</key><dict><key>begin</key><string>"</string><key>beginCaptures</key><array><dict><key>name</key><string>punctuation.definition.string.begin.netlogo</string></dict></array><key>end</key><string>"</string><key>endCaptures</key><array><dict><key>name</key><string>punctuation.definition.string.end.netlogo</string></dict></array><key>name</key><string>string.quoted.double.netlogo</string><key>patterns</key><array><dict><key>match</key><string>\"</string><key>name</key><string>constant.character.escape.netlogo</string></dict></array></dict><key>brackets</key><dict><key>begin</key><string>\[</string><key>beginCaptures</key><array><dict><key>name</key><string>meta.brackets.netlogo</string></dict></array><key>contentName</key><string>meta.brackets.netlogo</string><key>end</key><string>\]</string><key>endCaptures</key><array><dict><key>name</key><string>meta.brackets.netlogo</string></dict></array><key>patterns</key><array><dict><key>include</key><string>$self</string></dict></array></dict><key>operators</key><dict><key>comment</key><string>Operator symbols</string><key>match</key><string>(?&lt;=\s)(=|!=|&gt;|&gt;=|&lt;|&lt;=|&amp;|&amp;&amp;|:|\||\|\||\+|-|\*|\.\*|/|\./|\\|\.\\|\^|\.\^)(?=\s)</string><key>name</key><string>keyword.operator.symbols.netlogo</string></dict><key>parens</key><dict><key>begin</key><string>\(</string><key>beginCaptures</key><array><dict><key>name</key><string>meta.parens.netlogo</string></dict></array><key>contentName</key><string>meta.parens.netlogo</string><key>end</key><string>\)</string><key>endCaptures</key><array><dict><key>name</key><string>meta.parens.netlogo</string></dict></array><key>patterns</key><array><dict><key>include</key><string>#end_in_parens</string></dict><dict><key>include</key><string>$self</string></dict></array></dict><key>builtin_functions</key><dict><key>patterns</key><array><dict><key>match</key><string>(?x)\b(but-first|but-last|empty?|filter|first|fput| lput|let|set|is-list?|histogram|item|last|length|list| lput|map|member?|modes|n-of|n-values|of|position|one-of| reduce|remove|remove-duplicates|remove-item|replace-item| reverse|sentence|shuffle|sort|sort-by|sort-on|sublist)\b</string><key>name</key><string>support.function.builtin.netlogo</string></dict></array></dict></dict></dict></plist>
